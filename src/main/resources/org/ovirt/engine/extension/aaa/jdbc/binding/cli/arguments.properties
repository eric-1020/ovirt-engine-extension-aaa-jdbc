#
# Root arguments
#
root.help.usage = Usage: @PROGRAM_NAME@ [options] module ...
root.help.header = oVirt local user management command line tool.
root.help.footer = \
Modules:\n\
\  @MODULE_LIST@\n\
See: @PROGRAM_NAME@ [options] module --help for help on a specific module.

root.arg.log-level.name = log-level
root.arg.log-level.type = required_argument
root.arg.log-level.help = \
Log level of the tool.\n\
Valid values: @CLI_PRM_PATTERN@\n\
Default value: @CLI_PRM_DEFAULT@
root.arg.log-level.default = WARNING
root.arg.log-level.valuetype = java.util.logging.Level
root.arg.log-level.matcher = FINEST|FINER|FINE|CONFIG|INFO|WARNING|SEVERE|ALL|OFF

root.arg.db-config.name = db-config
root.arg.db-config.type = required_argument
root.arg.db-config.default = @ENGINE_ETC@/aaa/internal.properties
root.arg.db-config.help = \
Path to the file which contains database connection configuration.\n\
Default value: @CLI_PRM_DEFAULT@
root.arg.db-config.metavar = FILE

root.arg.help.name = help
root.arg.help.help = Show help for this module.
root.arg.help.default = false
root.arg.help.valuetype = java.lang.Boolean
root.arg.help.value = true

root.arg.version.name = version
root.arg.version.help = Show package version information.
root.arg.version.valuetype = java.lang.Boolean
root.arg.version.value = true
root.arg.version.default = false

#
# User
#
root-user.help.usage = Usage: @PROGRAM_NAME@ [options] user module ...
root-user.help.header = Perform user related tasks.
root-user.help.footer = \
Modules:\n\
\  @MODULE_LIST@\n\
See: @PROGRAM_NAME@ [options] user module --help for help on a specific user module.

root-user.arg.help.name = help
root-user.arg.help.help = Show help for this module.
root-user.arg.help.default = false
root-user.arg.help.valuetype = java.lang.Boolean
root-user.arg.help.value = true

#
# User add
#
root-user-add.help.usage = Usage: @PROGRAM_NAME@ user add username [options]
root-user-add.help.header = Add a new user.
root-user-add.help.footer = \
Note: Newly created user cannot log in by default. See '@PROGRAM_NAME@ user password-reset --help'.

root-user-add.arg.help.name = help
root-user-add.arg.help.help = Show help for this module.
root-user-add.arg.help.default = false
root-user-add.arg.help.valuetype = java.lang.Boolean
root-user-add.arg.help.value = true

root-user-add.arg.account-valid-from.name = account-valid-from
root-user-add.arg.account-valid-from.metavar = yyyy-MM-dd HH:mm:ssX
root-user-add.arg.account-valid-from.help = \
The date which the account is valid from.\n\
Default value: current date/time
root-user-add.arg.account-valid-from.type = required_argument
root-user-add.arg.account-valid-from.matcher = \\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}[\\w\\-+:]+

root-user-add.arg.account-valid-to.name = account-valid-to
root-user-add.arg.account-valid-to.metavar = yyyy-MM-dd HH:mm:ssX
root-user-add.arg.account-valid-to.help = \
The date when the account become expired from.\n\
Default value: infinite
root-user-add.arg.account-valid-to.type = required_argument
root-user-add.arg.account-valid-to.matcher = \\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}[\\w\\-+:]+

root-user-add.arg.account-login-time.name = account-login-time
root-user-add.arg.account-login-time.metavar = 1|0 ** 336
root-user-add.arg.account-login-time.help = \
7 * 48 long string for each half hour of the week. 1:login_allowed.\n\
Affects AUTH_RECORD.VALID_TO. See also WEEK_START_SUNDAY setting.\n\
Default value: 1 ** 336.
root-user-add.arg.account-login-time.type = required_argument
root-user-add.arg.account-login-time.matcher = [01]{336}

root-user-add.arg.attribute.name = attribute
root-user-add.arg.attribute.metavar = <name>=<value>
root-user-add.arg.attribute.help = \
Available names:\n\
\  department\n\
\  description\n\
\  displayName\n\
\  email\n\
\  firstName\n\
\  lastName\n\
\  title
root-user-add.arg.attribute.type = required_argument
root-user-add.arg.attribute.multivalue = true
root-user-add.arg.attribute.matcher = (displayName|email|description|firstName|lastName|department|title)=.+

root-user-add.arg.flag.name = flag
root-user-add.arg.flag.metavar = <+|-><flag>
root-user-add.arg.flag.help = \
Available flags:\n\
\  disabled\n\
\  nopass
root-user-add.arg.flag.type = required_argument
root-user-add.arg.flag.multivalue = true
root-user-add.arg.flag.matcher = (\\+|-)(disabled|nopass)

root-user-add.arg.id.name = id
root-user-add.arg.id.metavar = ID
root-user-add.arg.id.type = required_argument
root-user-add.arg.id.help = \
String representation of user unique id.\n\
Default value: generated UUID
root-user-add.arg.id.matcher = .{1,512}

#
# User edit
#
root-user-edit.help.usage = Usage: @PROGRAM_NAME@ user edit username [options]
root-user-edit.help.header = Edit a user.

root-user-edit.arg.help.name = help
root-user-edit.arg.help.help = Show help for this module.
root-user-edit.arg.help.default = false
root-user-edit.arg.help.valuetype = java.lang.Boolean
root-user-edit.arg.help.value = true

root-user-edit.arg.password-valid-to.name = password-valid-to
root-user-edit.arg.password-valid-to.metavar = yyyy-MM-dd HH:mm:ssX
root-user-edit.arg.password-valid-to.help = \
Password expiration date.\n\
Default value: current date/time
root-user-edit.arg.password-valid-to.type = required_argument
root-user-edit.arg.password-valid-to.matcher = \\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}[\\w\\-+:]+

root-user-edit.arg.account-valid-from.name = account-valid-from
root-user-edit.arg.account-valid-from.metavar = yyyy-MM-dd HH:mm:ssX
root-user-edit.arg.account-valid-from.help = \
The date which the account is valid from.\n\
Default value: current date/time
root-user-edit.arg.account-valid-from.type = required_argument
root-user-edit.arg.account-valid-from.matcher = \\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}[\\w\\-+:]+

root-user-edit.arg.account-valid-to.name = account-valid-to
root-user-edit.arg.account-valid-to.metavar = yyyy-MM-dd HH:mm:ssX
root-user-edit.arg.account-valid-to.help = \
Date when the account become expired from.\n\
Default value: infinite
root-user-edit.arg.account-valid-to.type = required_argument
root-user-edit.arg.account-valid-to.matcher = \\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}[\\w\\-+:]+

root-user-edit.arg.account-login-time.name = account-login-time
root-user-edit.arg.account-login-time.metavar = 1|0 ** 336
root-user-edit.arg.account-login-time.help = \
7 * 48 long string for each half hour of the week. 1:login_allowed.\n\
Affects AUTH_RECORD.VALID_TO. See also WEEK_START_SUNDAY setting. Default: 1 ** 336.
root-user-edit.arg.account-login-time.type = required_argument
root-user-edit.arg.account-login-time.matcher = [01]{336}

root-user-edit.arg.attribute.name = attribute
root-user-edit.arg.attribute.metavar = <name>=<value>
root-user-edit.arg.attribute.help =  \
Available names:\n\
\  department\n\
\  description\n\
\  displayName\n\
\  email\n\
\  firstName\n\
\  lastName\n\
\  title
root-user-edit.arg.attribute.type = required_argument
root-user-edit.arg.attribute.multivalue = true
root-user-edit.arg.attribute.matcher = (displayName|email|description|firstName|lastName|department|title)=.*

root-user-edit.arg.flag.name = flag
root-user-edit.arg.flag.metavar = <+|-><flag>
root-user-edit.arg.flag.help = \
Available flags:\n\
\  disabled\n\
\  nopass
root-user-edit.arg.flag.type = required_argument
root-user-edit.arg.flag.multivalue = true
root-user-edit.arg.flag.matcher = (\\+|-)(disabled|nopass)

root-user-edit.arg.id.name = id
root-user-edit.arg.id.metavar = ID
root-user-edit.arg.id.type = required_argument
root-user-edit.arg.id.help = String representation of user unique id.
root-user-edit.arg.id.matcher = .{1,512}

root-user-edit.arg.new-name.name = new-name
root-user-edit.arg.new-name.type = required_argument
root-user-edit.arg.new-name.help = New name to assign.

#
# User delete
#
root-user-delete.help.usage = Usage: @PROGRAM_NAME@ user delete username
root-user-delete.help.header = Delete a user.

root-user-delete.arg.help.name = help
root-user-delete.arg.help.help = Show help for this module.
root-user-delete.arg.help.default = false
root-user-delete.arg.help.valuetype = java.lang.Boolean
root-user-delete.arg.help.value = true


#
# User unlock
#
root-user-unlock.help.usage = usage: @PROGRAM_NAME@ user unlock username
root-user-unlock.help.header = Unlock locked users.

root-user-unlock.arg.help.name = help
root-user-unlock.arg.help.help = Show help for this module.
root-user-unlock.arg.help.default = false
root-user-unlock.arg.help.valuetype = java.lang.Boolean
root-user-unlock.arg.help.value = true

#
# User password reset
#
root-user-password-reset.help.usage = Usage: @PROGRAM_NAME@ user password-reset username [options]
root-user-password-reset.help.header = Reset a user's password.

root-user-password-reset.arg.help.name = help
root-user-password-reset.arg.help.help = Show help for this module.
root-user-password-reset.arg.help.default = false
root-user-password-reset.arg.help.valuetype = java.lang.Boolean
root-user-password-reset.arg.help.value = true

root-user-password-reset.arg.password.name = password
root-user-password-reset.arg.password.mandatory = true
root-user-password-reset.arg.password.metavar = <type>:<value>
root-user-password-reset.arg.password.help = \
Password can be specified in one of the following formats:\n\
\  interactive: - query password interactively.\n\
\  pass:STRING - provide a password as STRING.\n\
\  env:KEY - provide a password using environment KEY.\n\
\  file:FILE - provide a password as 1st line of FILE.\n\
\  none: - provide an empty password, equal to --flag=noPassword\n\
Default value: @CLI_PRM_DEFAULT@
root-user-password-reset.arg.password.type = required_argument
root-user-password-reset.arg.password.default = interactive:
root-user-password-reset.arg.password.matcher = (pass:[^\\s]*)|(env:[^\\s]*)|(file:[^\\s]*)|interactive:|none:

root-user-password-reset.arg.password-valid-to.name = password-valid-to
root-user-password-reset.arg.password-valid-to.metavar = yyyy-MM-dd HH:mm:ssX
root-user-password-reset.arg.password-valid-to.help = \
Password expiration date.\n\
Default value: current date/time
root-user-password-reset.arg.password-valid-to.type = required_argument
root-user-password-reset.arg.password-valid-to.matcher = \\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}[\\w\\-+:]+

root-user-password-reset.arg.force.name = force
root-user-password-reset.arg.force.help = If present password validity tests are skipped.
root-user-password-reset.arg.force.valuetype = java.lang.Boolean
root-user-password-reset.arg.force.value = true
root-user-password-reset.arg.force.default = false

#
# User show
#
root-user-show.help.usage = Usage: @PROGRAM_NAME@ user show username
root-user-show.help.header = Display user properties.

root-user-show.arg.help.name = help
root-user-show.arg.help.help = Show help for this module.
root-user-show.arg.help.default = false
root-user-show.arg.help.valuetype = java.lang.Boolean
root-user-show.arg.help.value = true

root-user-show.arg.attribute.name = attribute
root-user-show.arg.attribute.metavar = <name>
root-user-show.arg.attribute.help = \
Available names:\n\
\  department\n\
\  description\n\
\  displayName\n\
\  email\n\
\  firstName\n\
\  id\n\
\  lastName\n\
\  namespace\n\
\  title
root-user-show.arg.attribute.type = required_argument
root-user-show.arg.attribute.matcher = (department|description|displayName|email|firstName|id|lastName|namespace|title)

#
# Group
#
root-group.help.usage = usage: @PROGRAM_NAME@ [options] group module ...
root-group.help.header = Perform group operations
root-group.help.footer = \
Modules:\n\
\  @MODULE_LIST@\n\
See: @PROGRAM_NAME@ [options] group module --help for help on a specific group module

root-group.arg.help.name = help
root-group.arg.help.help = Show help for this module.
root-group.arg.help.default = false
root-group.arg.help.valuetype = java.lang.Boolean
root-group.arg.help.value = true

#
# Group add
#
root-group-add.help.usage = Usage: @PROGRAM_NAME@ group add name [options]
root-group-add.help.header = Add a new group.

root-group-add.arg.help.name = help
root-group-add.arg.help.help = Show help for this module.
root-group-add.arg.help.default = false
root-group-add.arg.help.valuetype = java.lang.Boolean
root-group-add.arg.help.value = true

root-group-add.arg.attribute.name = attribute
root-group-add.arg.attribute.metavar = <name>=<value>
root-group-add.arg.attribute.help = \
Available names:\n\
\  description\n\
\  displayName
root-group-add.arg.attribute.type = required_argument
root-group-add.arg.attribute.multivalue = true
root-group-add.arg.attribute.matcher = (displayName|description)=.*

root-group-add.arg.id.name = id
root-group-add.arg.id.metavar = ID
root-group-add.arg.id.type = required_argument
root-group-add.arg.id.help = \
String representation of group unique id.\n\
Default value: generated UUID
root-group-add.arg.id.matcher = .{1,512}

#
# Group edit
#
root-group-edit.help.usage = Usage: @PROGRAM_NAME@ group edit name [options]
root-group-edit.help.header = Edit a group.

root-group-edit.arg.help.name = help
root-group-edit.arg.help.help = Show help for this module.
root-group-edit.arg.help.default = false
root-group-edit.arg.help.valuetype = java.lang.Boolean
root-group-edit.arg.help.value = true

root-group-edit.arg.attribute.name = attribute
root-group-edit.arg.attribute.metavar = <name>=<value>
root-group-edit.arg.attribute.help = \
Available attributes:\n\
\  description\n\
\  displayName
root-group-edit.arg.attribute.type = required_argument
root-group-edit.arg.attribute.multivalue = true
root-group-edit.arg.attribute.matcher = (displayName|description)=.+

root-group-edit.arg.id.name = id
root-group-edit.arg.id.metavar = ID
root-group-edit.arg.id.type = required_argument
root-group-edit.arg.id.help = String representation of group unique id.
root-group-edit.arg.id.matcher = .{1,512}

root-group-edit.arg.new-name.name = new-name
root-group-edit.arg.new-name.type = required_argument
root-group-edit.arg.new-name.help = New name to assign.

#
# Group delete
#
root-group-delete.help.usage = Usage: @PROGRAM_NAME@ group delete name
root-group-delete.help.header = Delete a group.

root-group-delete.arg.help.name = help
root-group-delete.arg.help.help = Show help for this module.
root-group-delete.arg.help.default = false
root-group-delete.arg.help.valuetype = java.lang.Boolean
root-group-delete.arg.help.value = true

#
# Group show
#
root-group-show.help.usage = Usage: @PROGRAM_NAME@ group show name
root-group-show.help.header = Display group properties.

root-group-show.arg.help.name = help
root-group-show.arg.help.help = Show help for this module.
root-group-show.arg.help.default = false
root-group-show.arg.help.valuetype = java.lang.Boolean
root-group-show.arg.help.value = true

#
# Group-manage
#
root-group-manage.help.usage = Usage: @PROGRAM_NAME@ [options] group-manage MODULE group-name...
root-group-manage.help.header = Add/remove members to/from groups
root-group-manage.help.footer = \
Modules:\n\
\  @MODULE_LIST@\n\
See: @PROGRAM_NAME@ [options] group-manage module --help for help on a specific group-manage module

root-group-manage.arg.help.name = help
root-group-manage.arg.help.help = Show help for this module.
root-group-manage.arg.help.default = false
root-group-manage.arg.help.valuetype = java.lang.Boolean
root-group-manage.arg.help.value = true

#
# Group-manage useradd
#
root-group-manage-useradd.help.usage = Usage: @PROGRAM_NAME@ [options] group-manage useradd group-name --user
root-group-manage-useradd.help.header = Add a user as a member to group-name

root-group-manage-useradd.arg.help.name = help
root-group-manage-useradd.arg.help.help = Show help for this module.
root-group-manage-useradd.arg.help.default = false
root-group-manage-useradd.arg.help.valuetype = java.lang.Boolean
root-group-manage-useradd.arg.help.value = true

root-group-manage-useradd.arg.user.name = user
root-group-manage-useradd.arg.user.type = required_argument
root-group-manage-useradd.arg.user.help = Name of user to add.
root-group-manage-useradd.arg.user.mandatory = true

#
# Group-manage userdel
#
root-group-manage-userdel.help.usage = Usage: @PROGRAM_NAME@ [options] group-manage userdel group-name --user
root-group-manage-userdel.help.header = Remove a user's membership from group-name

root-group-manage-userdel.arg.help.name = help
root-group-manage-userdel.arg.help.help = Show help for this module.
root-group-manage-userdel.arg.help.default = false
root-group-manage-userdel.arg.help.valuetype = java.lang.Boolean
root-group-manage-userdel.arg.help.value = true

root-group-manage-userdel.arg.user.name = user
root-group-manage-userdel.arg.user.type = required_argument
root-group-manage-userdel.arg.user.help = Name of user to remove.
root-group-manage-userdel.arg.user.mandatory = true

#
# Group-manage groupadd
#
root-group-manage-groupadd.help.usage = Usage: @PROGRAM_NAME@ [options] group-manage groupadd group-name --group
root-group-manage-groupadd.help.header = Add a group as a member to group-name.

root-group-manage-groupadd.arg.help.name = help
root-group-manage-groupadd.arg.help.help = Show help for this module.
root-group-manage-groupadd.arg.help.default = false
root-group-manage-groupadd.arg.help.valuetype = java.lang.Boolean
root-group-manage-groupadd.arg.help.value = true

root-group-manage-groupadd.arg.group.name = group
root-group-manage-groupadd.arg.group.type = required_argument
root-group-manage-groupadd.arg.group.help = Name of group to add.
root-group-manage-groupadd.arg.group.mandatory = true

#
# Group-manage groupdel
#
root-group-manage-groupdel.help.usage = Usage: @PROGRAM_NAME@ [options] group-manage groupdel group-name --group
root-group-manage-groupdel.help.header = Remove a group's membership from group-name.

root-group-manage-groupdel.arg.help.name = help
root-group-manage-groupdel.arg.help.help = show help for this module
root-group-manage-groupdel.arg.help.default = false
root-group-manage-groupdel.arg.help.valuetype = java.lang.Boolean
root-group-manage-groupdel.arg.help.value = true

root-group-manage-groupdel.arg.group.name = group
root-group-manage-groupdel.arg.group.type = required_argument
root-group-manage-groupdel.arg.group.help = Name of group to remove.
root-group-manage-groupdel.arg.group.mandatory = true

#
# Group-manage show
#
root-group-manage-show.help.usage = Usage: @PROGRAM_NAME@ [options] group-manage show group-name
root-group-manage-show.help.header = Show groups members

root-group-manage-show.arg.help.name = help
root-group-manage-show.arg.help.help = Show help for this module.
root-group-manage-show.arg.help.default = false
root-group-manage-show.arg.help.valuetype = java.lang.Boolean
root-group-manage-show.arg.help.value = true

#
# Settings
#
root-settings.help.usage = Usage: @PROGRAM_NAME@ [options] settings module ...
root-settings.help.header = Show/modify settings
root-settings.help.footer = \
Modules:\n\
\  @MODULE_LIST@\n\
See: @PROGRAM_NAME@ [options] settings module --help for help on a specific settings module

root-settings.arg.help.name = help
root-settings.arg.help.help = Show help for this module.
root-settings.arg.help.default = false
root-settings.arg.help.valuetype = java.lang.Boolean
root-settings.arg.help.value = true

#
# Settings show
#
root-settings-show.help.usage = Usage: @PROGRAM_NAME@ [options] settings show [options]
root-settings-show.help.header = Show settings

root-settings-show.arg.help.name = help
root-settings-show.arg.help.help = Show help for this module.
root-settings-show.arg.help.default = false
root-settings-show.arg.help.valuetype = java.lang.Boolean
root-settings-show.arg.help.value = true

root-settings-show.arg.name.name = name
root-settings-show.arg.name.help = \
Name of setting to show.\
Default value: all
root-settings-show.arg.name.default = all
root-settings-show.arg.name.mandatory = true

#
# Settings set
#
root-settings-set.help.usage = Usage: @PROGRAM_NAME@ [options] settings set --name --value
root-settings-set.help.header = Set a setting

root-settings-set.arg.help.name = help
root-settings-set.arg.help.help = Show help for this module.
root-settings-set.arg.help.default = false
root-settings-set.arg.help.valuetype = java.lang.Boolean
root-settings-set.arg.help.value = true

root-settings-set.arg.name.name = name
root-settings-set.arg.name.help = Name of setting to set.
root-settings-set.arg.name.mandatory = true

root-settings-set.arg.value.name = value
root-settings-set.arg.value.help = Value to set.
root-settings-set.arg.value.mandatory = true

#
# Query
#
root-query.help.usage = Usage: @PROGRAM_NAME@ [options] query --what --value
root-query.help.header = Search users/groups by attributes

root-query.arg.help.name = help
root-query.arg.help.help = Show help for this module.
root-query.arg.help.default = false
root-query.arg.help.valuetype = java.lang.Boolean
root-query.arg.help.value = true

root-query.arg.what.name = what
root-query.arg.what.type = required_argument
root-query.arg.what.help = \
Query an entity.\
Valid values: user|group
root-query.arg.what.mandatory = true
root-query.arg.what.matcher = user|group

root-query.arg.pattern.name = pattern
root-query.arg.pattern.type = required_argument
root-query.arg.pattern.metavar = <attribute>=<value>
root-query.arg.pattern.help = \
Available attributes:\n\
\  department\n\
\  description\n\
\  displayName\n\
\  email\n\
\  firstName\n\
\  id\n\
\  lastName\n\
\  name\n\
\  title\n\
Wildcard character may be placed at suffix of value to match any.
root-query.arg.pattern.multivalue = true
root-query.arg.pattern.matcher = (name|id|displayName|email|description|firstName|lastName|department|title)=(.)+

